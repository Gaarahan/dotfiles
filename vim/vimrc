call plug#begin('~/.vim/plugged')

" Appearance customize
Plug 'mhinz/vim-startify'                       " customize the startup page
Plug 'glepnir/oceanic-material'                 " theme
Plug 'itchyny/lightline.vim'                    " dwaohdowi
Plug 'mengelbrecht/lightline-bufferline'
Plug 'itchyny/vim-gitbranch'

" Plug for base input
Plug 'jiangmiao/auto-pairs'                     " auto pair bracket when input
Plug 'neoclide/coc.nvim', {'branch': 'release'} " auto complete
Plug 'andymass/vim-matchup'                     " make '%' support more feature
Plug 'voldikss/vim-translator'                  " select block and enter Translate*
Plug 'junegunn/vim-easy-align'                  " select block and enter 'ga[align-char]' to align by special char
Plug 'easymotion/vim-easymotion'                " use <leader><leader> to active plugin, use w/f to use more powerful function 

" Plug for html
Plug 'mattn/emmet-vim'
Plug 'alvan/vim-closetag'

" plug for vue
Plug 'posva/vim-vue'
Plug 'ThePrimeagen/vim-be-good'

" plug for markdown
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
let g:vim_markdown_fenced_languages = ['css', 'java', 'javascript', 'js=javascript', 'sass', 'xml', 'typescrtpt', 'ts=typescrtpt']

" plug for dir_tree
if has('nvim')
  Plug 'Shougo/defx.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/defx.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

call plug#end()

" enable vim matchup
let g:loaded_matchit = 1
" remap default leader for emmet-vim
let g:user_emmet_leader_key='<C-Z>'

let g:VIM_SCRIPT_PATH = '~/.vim/'
call helpers#source_dir(VIM_SCRIPT_PATH . './plugins')

